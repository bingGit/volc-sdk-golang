// Code generated by protoc-gen-volcengine-sdk
// source: VodUploadService
// DO NOT EDIT!

package vod

import (
	"fmt"
	"testing"

	"github.com/volcengine/volc-sdk-golang/base"
	"github.com/volcengine/volc-sdk-golang/service/vod"
	"github.com/volcengine/volc-sdk-golang/service/vod/models/request"
)

func Test_QueryUploadTaskInfo(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodQueryUploadTaskInfoRequest{
		JobIds: "your JobIds",
	}

	resp, status, err := instance.QueryUploadTaskInfo(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_ApplyUploadInfo(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodApplyUploadInfoRequest{
		SpaceName:         "your SpaceName",
		SessionKey:        "your SessionKey",
		FileSize:          0,
		FileType:          "your FileType",
		FileName:          "your FileName",
		StorageClass:      0,
		FileExtension:     "your FileExtension",
		ClientNetWorkMode: "your ClientNetWorkMode",
		ClientIDCMode:     "your ClientIDCMode",
		NeedFallback:      false,
	}

	resp, status, err := instance.ApplyUploadInfo(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_CommitUploadInfo(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodCommitUploadInfoRequest{
		SpaceName:       "your SpaceName",
		SessionKey:      "your SessionKey",
		CallbackArgs:    "your CallbackArgs",
		Functions:       "your Functions",
		VodUploadSource: "your VodUploadSource",
		ExpireTime:      "your ExpireTime",
	}

	resp, status, err := instance.CommitUploadInfo(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}
