// Code generated by protoc-gen-volcengine-sdk
// source: VodMeasureService
// DO NOT EDIT!

package vod

import (
	"fmt"
	"testing"

	"github.com/volcengine/volc-sdk-golang/base"
	"github.com/volcengine/volc-sdk-golang/service/vod"
	"github.com/volcengine/volc-sdk-golang/service/vod/models/request"
)

func Test_DescribeVodSpaceTranscodeData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceTranscodeDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		TranscodeType:   "your TranscodeType",
		Specification:   "your Specification",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
		RegionList:      "your RegionList",
	}

	resp, status, err := instance.DescribeVodSpaceTranscodeData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceAIStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceAIStatisDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		MediaAiType:     "your MediaAiType",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
		RegionList:      "your RegionList",
	}

	resp, status, err := instance.DescribeVodSpaceAIStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceSubtitleStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceSubtitleStatisDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		SubtitleType:    "your SubtitleType",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
		RegionList:      "your RegionList",
	}

	resp, status, err := instance.DescribeVodSpaceSubtitleStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceDetectStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceDetectStatisDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		DetectType:      "your DetectType",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
		RegionList:      "your RegionList",
	}

	resp, status, err := instance.DescribeVodSpaceDetectStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceWorkflowDetailData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceWorkflowDetailDataRequest{
		Region:    "your Region",
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		PageSize:  0,
		PageNum:   0,
	}

	resp, status, err := instance.DescribeVodSpaceWorkflowDetailData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceEditDetailData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceEditDetailDataRequest{
		Region:    "your Region",
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		PageSize:  0,
		PageNum:   0,
	}

	resp, status, err := instance.DescribeVodSpaceEditDetailData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSnapshotData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSnapshotDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		SnapshotType:    "your SnapshotType",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
		RegionList:      "your RegionList",
	}

	resp, status, err := instance.DescribeVodSnapshotData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodPlayFileLogByDomain(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodPlayFileLogByDomainRequest{
		StartTime:  "your StartTime",
		EndTime:    "your EndTime",
		DomainList: "your DomainList",
	}

	resp, status, err := instance.DescribeVodPlayFileLogByDomain(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceStorageData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodDescribeVodSpaceStorageDataRequest{
		SpaceList:   "your SpaceList",
		StartTime:   "your StartTime",
		EndTime:     "your EndTime",
		Aggregation: 0,
		Type:        "your Type",
		RegionList:  "your RegionList",
	}

	resp, status, err := instance.DescribeVodSpaceStorageData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodDomainTrafficData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodDescribeVodDomainTrafficDataRequest{
		DomainList:        "your DomainList",
		DomainInSpaceList: "your DomainInSpaceList",
		StartTime:         "your StartTime",
		EndTime:           "your EndTime",
		Aggregation:       0,
		TrafficType:       "your TrafficType",
		Area:              "your Area",
		RegionList:        "your RegionList",
	}

	resp, status, err := instance.DescribeVodDomainTrafficData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodDomainBandwidthData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodDescribeVodDomainBandwidthDataRequest{
		DomainList:        "your DomainList",
		DomainInSpaceList: "your DomainInSpaceList",
		StartTime:         "your StartTime",
		EndTime:           "your EndTime",
		Aggregation:       0,
		BandwidthType:     "your BandwidthType",
		Area:              "your Area",
		RegionList:        "your RegionList",
	}

	resp, status, err := instance.DescribeVodDomainBandwidthData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodEnhanceImageData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodEnhanceImageDataRequest{
		SpaceList:     "your SpaceList",
		StartTime:     "your StartTime",
		EndTime:       "your EndTime",
		TaskTypeList:  "your TaskTypeList",
		TaskStageList: "your TaskStageList",
		Aggregation:   0,
		RegionList:    "your RegionList",
	}

	resp, status, err := instance.DescribeVodEnhanceImageData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceEditStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceEditStatisDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		Specification:   "your Specification",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
		RegionList:      "your RegionList",
	}

	resp, status, err := instance.DescribeVodSpaceEditStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodPlayedStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodPlayedStatisDataRequest{
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		VidList:   "your VidList",
		OrderType: "your OrderType",
	}

	resp, status, err := instance.DescribeVodPlayedStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodMostPlayedStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodMostPlayedStatisDataRequest{
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		OrderType: "your OrderType",
		TopN:      0,
	}

	resp, status, err := instance.DescribeVodMostPlayedStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodRealtimeMediaData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodRealtimeMediaDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		ProcessType:     "your ProcessType",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
	}

	resp, status, err := instance.DescribeVodRealtimeMediaData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodRealtimeMediaDetailData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodRealtimeMediaDetailDataRequest{
		Region:    "your Region",
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		PageSize:  0,
		PageNum:   0,
	}

	resp, status, err := instance.DescribeVodRealtimeMediaDetailData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}
