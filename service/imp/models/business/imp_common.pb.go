// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: imp/business/imp_common.proto

package business

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InputPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"` // 可选：VOD TOS
	TosBucket    string `protobuf:"bytes,2,opt,name=TosBucket,proto3" json:"TosBucket,omitempty"`
	VodSpaceName string `protobuf:"bytes,3,opt,name=VodSpaceName,proto3" json:"VodSpaceName,omitempty"`
	FileId       string `protobuf:"bytes,4,opt,name=FileId,proto3" json:"FileId,omitempty"`
}

func (x *InputPath) Reset() {
	*x = InputPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputPath) ProtoMessage() {}

func (x *InputPath) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputPath.ProtoReflect.Descriptor instead.
func (*InputPath) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{0}
}

func (x *InputPath) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InputPath) GetTosBucket() string {
	if x != nil {
		return x.TosBucket
	}
	return ""
}

func (x *InputPath) GetVodSpaceName() string {
	if x != nil {
		return x.VodSpaceName
	}
	return ""
}

func (x *InputPath) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputPath *InputPath `protobuf:"bytes,1,opt,name=InputPath,proto3" json:"InputPath,omitempty"`
	Clip      *Clip      `protobuf:"bytes,2,opt,name=Clip,proto3" json:"Clip,omitempty"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{1}
}

func (x *Input) GetInputPath() *InputPath {
	if x != nil {
		return x.InputPath
	}
	return nil
}

func (x *Input) GetClip() *Clip {
	if x != nil {
		return x.Clip
	}
	return nil
}

type Clip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int32 `protobuf:"varint,1,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime   int32 `protobuf:"varint,2,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
}

func (x *Clip) Reset() {
	*x = Clip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clip) ProtoMessage() {}

func (x *Clip) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clip.ProtoReflect.Descriptor instead.
func (*Clip) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{2}
}

func (x *Clip) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Clip) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type JobOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId    string `protobuf:"bytes,1,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"` // 任务模板id
	Properties    string `protobuf:"bytes,2,opt,name=Properties,proto3" json:"Properties,omitempty"` // 任务输出info
	Code          string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	FileMessageId string `protobuf:"bytes,4,opt,name=FileMessageId,proto3" json:"FileMessageId,omitempty"`
	TaskType      string `protobuf:"bytes,5,opt,name=TaskType,proto3" json:"TaskType,omitempty"` // 任务类型
	Status        string `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"`     // 任务状态
	ActivityId    string `protobuf:"bytes,7,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	StartTime     string `protobuf:"bytes,8,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime       string `protobuf:"bytes,9,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	TemplateName  string `protobuf:"bytes,10,opt,name=TemplateName,proto3" json:"TemplateName,omitempty"`
}

func (x *JobOutput) Reset() {
	*x = JobOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobOutput) ProtoMessage() {}

func (x *JobOutput) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobOutput.ProtoReflect.Descriptor instead.
func (*JobOutput) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{3}
}

func (x *JobOutput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *JobOutput) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

func (x *JobOutput) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *JobOutput) GetFileMessageId() string {
	if x != nil {
		return x.FileMessageId
	}
	return ""
}

func (x *JobOutput) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *JobOutput) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobOutput) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *JobOutput) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *JobOutput) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *JobOutput) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

type JobExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId               string       `protobuf:"bytes,1,opt,name=JobId,proto3" json:"JobId,omitempty"`         // 工作流执行id
	InputPath           *InputPath   `protobuf:"bytes,2,opt,name=InputPath,proto3" json:"InputPath,omitempty"` // 输入文件info
	Output              []*JobOutput `protobuf:"bytes,3,rep,name=Output,proto3" json:"Output,omitempty"`       // 任务节点info
	Status              string       `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`       // 工作流状态
	CreatedAt           string       `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	FinishedAt          string       `protobuf:"bytes,6,opt,name=FinishedAt,proto3" json:"FinishedAt,omitempty"`
	TemplateId          string       `protobuf:"bytes,7,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`               // 工作流模板id
	EnableLowPriority   string       `protobuf:"bytes,8,opt,name=EnableLowPriority,proto3" json:"EnableLowPriority,omitempty"` // 是否开启闲时任务
	JobSource           string       `protobuf:"bytes,9,opt,name=JobSource,proto3" json:"JobSource,omitempty"`                 // 任务来源
	Job                 *Job         `protobuf:"bytes,10,opt,name=Job,proto3" json:"Job,omitempty"`
	CallbackUri         string       `protobuf:"bytes,11,opt,name=CallbackUri,proto3" json:"CallbackUri,omitempty"`
	CallbackContentType string       `protobuf:"bytes,12,opt,name=CallbackContentType,proto3" json:"CallbackContentType,omitempty"`
	MultiInputs         []*Input     `protobuf:"bytes,13,rep,name=MultiInputs,proto3" json:"MultiInputs,omitempty"`
}

func (x *JobExecution) Reset() {
	*x = JobExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobExecution) ProtoMessage() {}

func (x *JobExecution) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobExecution.ProtoReflect.Descriptor instead.
func (*JobExecution) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{4}
}

func (x *JobExecution) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobExecution) GetInputPath() *InputPath {
	if x != nil {
		return x.InputPath
	}
	return nil
}

func (x *JobExecution) GetOutput() []*JobOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *JobExecution) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobExecution) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *JobExecution) GetFinishedAt() string {
	if x != nil {
		return x.FinishedAt
	}
	return ""
}

func (x *JobExecution) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *JobExecution) GetEnableLowPriority() string {
	if x != nil {
		return x.EnableLowPriority
	}
	return ""
}

func (x *JobExecution) GetJobSource() string {
	if x != nil {
		return x.JobSource
	}
	return ""
}

func (x *JobExecution) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobExecution) GetCallbackUri() string {
	if x != nil {
		return x.CallbackUri
	}
	return ""
}

func (x *JobExecution) GetCallbackContentType() string {
	if x != nil {
		return x.CallbackContentType
	}
	return ""
}

func (x *JobExecution) GetMultiInputs() []*Input {
	if x != nil {
		return x.MultiInputs
	}
	return nil
}

type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverrideParams *OverrideParams `protobuf:"bytes,1,opt,name=OverrideParams,proto3" json:"OverrideParams,omitempty"` // 动态参数
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

func (x *Params) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{5}
}

func (x *Params) GetOverrideParams() *OverrideParams {
	if x != nil {
		return x.OverrideParams
	}
	return nil
}

type OverrideParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmartErase    []*SmartEraseOverrideParams    `protobuf:"bytes,1,rep,name=SmartErase,proto3" json:"SmartErase,omitempty"`
	Output        []*OutputOverrideParams        `protobuf:"bytes,2,rep,name=Output,proto3" json:"Output,omitempty"`
	SmartEmoticon []*SmartEmoticonOverrideParams `protobuf:"bytes,3,rep,name=SmartEmoticon,proto3" json:"SmartEmoticon,omitempty"`
}

func (x *OverrideParams) Reset() {
	*x = OverrideParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideParams) ProtoMessage() {}

func (x *OverrideParams) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideParams.ProtoReflect.Descriptor instead.
func (*OverrideParams) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{6}
}

func (x *OverrideParams) GetSmartErase() []*SmartEraseOverrideParams {
	if x != nil {
		return x.SmartErase
	}
	return nil
}

func (x *OverrideParams) GetOutput() []*OutputOverrideParams {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *OverrideParams) GetSmartEmoticon() []*SmartEmoticonOverrideParams {
	if x != nil {
		return x.SmartEmoticon
	}
	return nil
}

type SmartEraseOverrideParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId []string   `protobuf:"bytes,1,rep,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	Watermark  *Watermark `protobuf:"bytes,2,opt,name=Watermark,proto3" json:"Watermark,omitempty"`
	OCR        *OCR       `protobuf:"bytes,3,opt,name=OCR,proto3" json:"OCR,omitempty"`
}

func (x *SmartEraseOverrideParams) Reset() {
	*x = SmartEraseOverrideParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartEraseOverrideParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartEraseOverrideParams) ProtoMessage() {}

func (x *SmartEraseOverrideParams) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartEraseOverrideParams.ProtoReflect.Descriptor instead.
func (*SmartEraseOverrideParams) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{7}
}

func (x *SmartEraseOverrideParams) GetActivityId() []string {
	if x != nil {
		return x.ActivityId
	}
	return nil
}

func (x *SmartEraseOverrideParams) GetWatermark() *Watermark {
	if x != nil {
		return x.Watermark
	}
	return nil
}

func (x *SmartEraseOverrideParams) GetOCR() *OCR {
	if x != nil {
		return x.OCR
	}
	return nil
}

type Watermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetectRect []*DetectRect `protobuf:"bytes,1,rep,name=DetectRect,proto3" json:"DetectRect,omitempty"`
}

func (x *Watermark) Reset() {
	*x = Watermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Watermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Watermark) ProtoMessage() {}

func (x *Watermark) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Watermark.ProtoReflect.Descriptor instead.
func (*Watermark) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{8}
}

func (x *Watermark) GetDetectRect() []*DetectRect {
	if x != nil {
		return x.DetectRect
	}
	return nil
}

type OCR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetectRect []*DetectRect `protobuf:"bytes,1,rep,name=DetectRect,proto3" json:"DetectRect,omitempty"`
}

func (x *OCR) Reset() {
	*x = OCR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OCR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR) ProtoMessage() {}

func (x *OCR) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR.ProtoReflect.Descriptor instead.
func (*OCR) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{9}
}

func (x *OCR) GetDetectRect() []*DetectRect {
	if x != nil {
		return x.DetectRect
	}
	return nil
}

type DetectRect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X1 float64 `protobuf:"fixed64,1,opt,name=X1,proto3" json:"X1,omitempty"`
	Y1 float64 `protobuf:"fixed64,2,opt,name=Y1,proto3" json:"Y1,omitempty"`
	X2 float64 `protobuf:"fixed64,3,opt,name=X2,proto3" json:"X2,omitempty"`
	Y2 float64 `protobuf:"fixed64,4,opt,name=Y2,proto3" json:"Y2,omitempty"`
}

func (x *DetectRect) Reset() {
	*x = DetectRect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectRect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectRect) ProtoMessage() {}

func (x *DetectRect) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectRect.ProtoReflect.Descriptor instead.
func (*DetectRect) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{10}
}

func (x *DetectRect) GetX1() float64 {
	if x != nil {
		return x.X1
	}
	return 0
}

func (x *DetectRect) GetY1() float64 {
	if x != nil {
		return x.Y1
	}
	return 0
}

func (x *DetectRect) GetX2() float64 {
	if x != nil {
		return x.X2
	}
	return 0
}

func (x *DetectRect) GetY2() float64 {
	if x != nil {
		return x.Y2
	}
	return 0
}

type OutputOverrideParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId []string    `protobuf:"bytes,1,rep,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	OutputPath *OutputPath `protobuf:"bytes,2,opt,name=OutputPath,proto3" json:"OutputPath,omitempty"`
}

func (x *OutputOverrideParams) Reset() {
	*x = OutputOverrideParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputOverrideParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputOverrideParams) ProtoMessage() {}

func (x *OutputOverrideParams) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputOverrideParams.ProtoReflect.Descriptor instead.
func (*OutputOverrideParams) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{11}
}

func (x *OutputOverrideParams) GetActivityId() []string {
	if x != nil {
		return x.ActivityId
	}
	return nil
}

func (x *OutputOverrideParams) GetOutputPath() *OutputPath {
	if x != nil {
		return x.OutputPath
	}
	return nil
}

type SmartEmoticonOverrideParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId       []string          `protobuf:"bytes,1,rep,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	DrivenVideo      *InputPath        `protobuf:"bytes,2,opt,name=DrivenVideo,proto3" json:"DrivenVideo,omitempty"`
	DrivenAudio      *InputPath        `protobuf:"bytes,3,opt,name=DrivenAudio,proto3" json:"DrivenAudio,omitempty"`
	DrivenTextParams *DrivenTextParams `protobuf:"bytes,4,opt,name=DrivenTextParams,proto3" json:"DrivenTextParams,omitempty"`
}

func (x *SmartEmoticonOverrideParams) Reset() {
	*x = SmartEmoticonOverrideParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartEmoticonOverrideParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartEmoticonOverrideParams) ProtoMessage() {}

func (x *SmartEmoticonOverrideParams) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartEmoticonOverrideParams.ProtoReflect.Descriptor instead.
func (*SmartEmoticonOverrideParams) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{12}
}

func (x *SmartEmoticonOverrideParams) GetActivityId() []string {
	if x != nil {
		return x.ActivityId
	}
	return nil
}

func (x *SmartEmoticonOverrideParams) GetDrivenVideo() *InputPath {
	if x != nil {
		return x.DrivenVideo
	}
	return nil
}

func (x *SmartEmoticonOverrideParams) GetDrivenAudio() *InputPath {
	if x != nil {
		return x.DrivenAudio
	}
	return nil
}

func (x *SmartEmoticonOverrideParams) GetDrivenTextParams() *DrivenTextParams {
	if x != nil {
		return x.DrivenTextParams
	}
	return nil
}

type DrivenTextParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrivenText string     `protobuf:"bytes,1,opt,name=DrivenText,proto3" json:"DrivenText,omitempty"`
	TTSParams  *TTSParams `protobuf:"bytes,2,opt,name=TTSParams,proto3" json:"TTSParams,omitempty"`
}

func (x *DrivenTextParams) Reset() {
	*x = DrivenTextParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrivenTextParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrivenTextParams) ProtoMessage() {}

func (x *DrivenTextParams) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrivenTextParams.ProtoReflect.Descriptor instead.
func (*DrivenTextParams) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{13}
}

func (x *DrivenTextParams) GetDrivenText() string {
	if x != nil {
		return x.DrivenText
	}
	return ""
}

func (x *DrivenTextParams) GetTTSParams() *TTSParams {
	if x != nil {
		return x.TTSParams
	}
	return nil
}

type TTSParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoiceType string `protobuf:"bytes,1,opt,name=VoiceType,proto3" json:"VoiceType,omitempty"`
}

func (x *TTSParams) Reset() {
	*x = TTSParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTSParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTSParams) ProtoMessage() {}

func (x *TTSParams) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTSParams.ProtoReflect.Descriptor instead.
func (*TTSParams) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{14}
}

func (x *TTSParams) GetVoiceType() string {
	if x != nil {
		return x.VoiceType
	}
	return ""
}

type OutputPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TosBucket    string `protobuf:"bytes,2,opt,name=TosBucket,proto3" json:"TosBucket,omitempty"`
	VodSpaceName string `protobuf:"bytes,3,opt,name=VodSpaceName,proto3" json:"VodSpaceName,omitempty"`
	FileName     string `protobuf:"bytes,4,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *OutputPath) Reset() {
	*x = OutputPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputPath) ProtoMessage() {}

func (x *OutputPath) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputPath.ProtoReflect.Descriptor instead.
func (*OutputPath) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{15}
}

func (x *OutputPath) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OutputPath) GetTosBucket() string {
	if x != nil {
		return x.TosBucket
	}
	return ""
}

func (x *OutputPath) GetVodSpaceName() string {
	if x != nil {
		return x.VodSpaceName
	}
	return ""
}

func (x *OutputPath) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TranscodeVideo *TranscodeVideoJob `protobuf:"bytes,1,opt,name=TranscodeVideo,proto3" json:"TranscodeVideo,omitempty"`
	ByteHD         *ByteHDJob         `protobuf:"bytes,2,opt,name=ByteHD,proto3" json:"ByteHD,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{16}
}

func (x *Job) GetTranscodeVideo() *TranscodeVideoJob {
	if x != nil {
		return x.TranscodeVideo
	}
	return nil
}

func (x *Job) GetByteHD() *ByteHDJob {
	if x != nil {
		return x.ByteHD
	}
	return nil
}

type TranscodeVideoJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container    string            `protobuf:"bytes,1,opt,name=Container,proto3" json:"Container,omitempty"`
	Video        *Video            `protobuf:"bytes,2,opt,name=Video,proto3" json:"Video,omitempty"`
	Audio        *Audio            `protobuf:"bytes,3,opt,name=Audio,proto3" json:"Audio,omitempty"`
	EnableRemux  bool              `protobuf:"varint,4,opt,name=EnableRemux,proto3" json:"EnableRemux,omitempty"`
	DisableVideo bool              `protobuf:"varint,5,opt,name=DisableVideo,proto3" json:"DisableVideo,omitempty"`
	DisableAudio bool              `protobuf:"varint,6,opt,name=DisableAudio,proto3" json:"DisableAudio,omitempty"`
	Segment      *Segment          `protobuf:"bytes,7,opt,name=Segment,proto3" json:"Segment,omitempty"`
	Logos        []*LogoDefinition `protobuf:"bytes,8,rep,name=Logos,proto3" json:"Logos,omitempty"`
}

func (x *TranscodeVideoJob) Reset() {
	*x = TranscodeVideoJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscodeVideoJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodeVideoJob) ProtoMessage() {}

func (x *TranscodeVideoJob) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscodeVideoJob.ProtoReflect.Descriptor instead.
func (*TranscodeVideoJob) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{17}
}

func (x *TranscodeVideoJob) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *TranscodeVideoJob) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *TranscodeVideoJob) GetAudio() *Audio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *TranscodeVideoJob) GetEnableRemux() bool {
	if x != nil {
		return x.EnableRemux
	}
	return false
}

func (x *TranscodeVideoJob) GetDisableVideo() bool {
	if x != nil {
		return x.DisableVideo
	}
	return false
}

func (x *TranscodeVideoJob) GetDisableAudio() bool {
	if x != nil {
		return x.DisableAudio
	}
	return false
}

func (x *TranscodeVideoJob) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *TranscodeVideoJob) GetLogos() []*LogoDefinition {
	if x != nil {
		return x.Logos
	}
	return nil
}

type ByteHDJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container string            `protobuf:"bytes,1,opt,name=Container,proto3" json:"Container,omitempty"`
	Video     *Video            `protobuf:"bytes,2,opt,name=Video,proto3" json:"Video,omitempty"`
	Audio     *Audio            `protobuf:"bytes,3,opt,name=Audio,proto3" json:"Audio,omitempty"`
	Segment   *Segment          `protobuf:"bytes,4,opt,name=Segment,proto3" json:"Segment,omitempty"`
	Logos     []*LogoDefinition `protobuf:"bytes,5,rep,name=Logos,proto3" json:"Logos,omitempty"`
}

func (x *ByteHDJob) Reset() {
	*x = ByteHDJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteHDJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteHDJob) ProtoMessage() {}

func (x *ByteHDJob) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteHDJob.ProtoReflect.Descriptor instead.
func (*ByteHDJob) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{18}
}

func (x *ByteHDJob) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *ByteHDJob) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *ByteHDJob) GetAudio() *Audio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *ByteHDJob) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *ByteHDJob) GetLogos() []*LogoDefinition {
	if x != nil {
		return x.Logos
	}
	return nil
}

type Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codec       string `protobuf:"bytes,1,opt,name=Codec,proto3" json:"Codec,omitempty"`
	ScaleType   int32  `protobuf:"varint,2,opt,name=ScaleType,proto3" json:"ScaleType,omitempty"`
	ScaleWidth  int32  `protobuf:"varint,3,opt,name=ScaleWidth,proto3" json:"ScaleWidth,omitempty"`
	ScaleHeight int32  `protobuf:"varint,4,opt,name=ScaleHeight,proto3" json:"ScaleHeight,omitempty"`
	ScaleShort  int32  `protobuf:"varint,5,opt,name=ScaleShort,proto3" json:"ScaleShort,omitempty"`
	ScaleLong   int32  `protobuf:"varint,6,opt,name=ScaleLong,proto3" json:"ScaleLong,omitempty"`
	Bitrate     int32  `protobuf:"varint,7,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	MaxFps      int32  `protobuf:"varint,8,opt,name=MaxFps,proto3" json:"MaxFps,omitempty"`
	Crf         *int32 `protobuf:"varint,9,opt,name=Crf,proto3,oneof" json:"Crf,omitempty"`
	Profile     string `protobuf:"bytes,10,opt,name=Profile,proto3" json:"Profile,omitempty"`
	PixFmt      string `protobuf:"bytes,11,opt,name=PixFmt,proto3" json:"PixFmt,omitempty"`
}

func (x *Video) Reset() {
	*x = Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{19}
}

func (x *Video) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Video) GetScaleType() int32 {
	if x != nil {
		return x.ScaleType
	}
	return 0
}

func (x *Video) GetScaleWidth() int32 {
	if x != nil {
		return x.ScaleWidth
	}
	return 0
}

func (x *Video) GetScaleHeight() int32 {
	if x != nil {
		return x.ScaleHeight
	}
	return 0
}

func (x *Video) GetScaleShort() int32 {
	if x != nil {
		return x.ScaleShort
	}
	return 0
}

func (x *Video) GetScaleLong() int32 {
	if x != nil {
		return x.ScaleLong
	}
	return 0
}

func (x *Video) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Video) GetMaxFps() int32 {
	if x != nil {
		return x.MaxFps
	}
	return 0
}

func (x *Video) GetCrf() int32 {
	if x != nil && x.Crf != nil {
		return *x.Crf
	}
	return 0
}

func (x *Video) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *Video) GetPixFmt() string {
	if x != nil {
		return x.PixFmt
	}
	return ""
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method             string   `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	IntegratedLoudness *float64 `protobuf:"fixed64,2,opt,name=IntegratedLoudness,proto3,oneof" json:"IntegratedLoudness,omitempty"`
	TruePeak           *float64 `protobuf:"fixed64,3,opt,name=TruePeak,proto3,oneof" json:"TruePeak,omitempty"`
	VolumeTime         *float64 `protobuf:"fixed64,4,opt,name=VolumeTime,proto3,oneof" json:"VolumeTime,omitempty"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{20}
}

func (x *Volume) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Volume) GetIntegratedLoudness() float64 {
	if x != nil && x.IntegratedLoudness != nil {
		return *x.IntegratedLoudness
	}
	return 0
}

func (x *Volume) GetTruePeak() float64 {
	if x != nil && x.TruePeak != nil {
		return *x.TruePeak
	}
	return 0
}

func (x *Volume) GetVolumeTime() float64 {
	if x != nil && x.VolumeTime != nil {
		return *x.VolumeTime
	}
	return 0
}

type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codec      string  `protobuf:"bytes,1,opt,name=Codec,proto3" json:"Codec,omitempty"`
	Profile    string  `protobuf:"bytes,2,opt,name=Profile,proto3" json:"Profile,omitempty"`
	SampleRate int32   `protobuf:"varint,3,opt,name=SampleRate,proto3" json:"SampleRate,omitempty"`
	Bitrate    int32   `protobuf:"varint,4,opt,name=Bitrate,proto3" json:"Bitrate,omitempty"`
	Channels   int32   `protobuf:"varint,5,opt,name=Channels,proto3" json:"Channels,omitempty"`
	Volume     *Volume `protobuf:"bytes,6,opt,name=Volume,proto3" json:"Volume,omitempty"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{21}
}

func (x *Audio) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *Audio) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *Audio) GetSampleRate() int32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *Audio) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Audio) GetChannels() int32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

func (x *Audio) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format   string `protobuf:"bytes,1,opt,name=Format,proto3" json:"Format,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Duration int32  `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{22}
}

func (x *Segment) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Segment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Segment) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type LogoDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                string               `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TextLogoDefinition  *TextLogoDefinition  `protobuf:"bytes,2,opt,name=TextLogoDefinition,proto3" json:"TextLogoDefinition,omitempty"`
	ImageLogoDefinition *ImageLogoDefinition `protobuf:"bytes,3,opt,name=ImageLogoDefinition,proto3" json:"ImageLogoDefinition,omitempty"`
	Position            *LogoPosition        `protobuf:"bytes,4,opt,name=Position,proto3" json:"Position,omitempty"`
	TimeLine            *TimeLine            `protobuf:"bytes,5,opt,name=TimeLine,proto3" json:"TimeLine,omitempty"`
}

func (x *LogoDefinition) Reset() {
	*x = LogoDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoDefinition) ProtoMessage() {}

func (x *LogoDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoDefinition.ProtoReflect.Descriptor instead.
func (*LogoDefinition) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{23}
}

func (x *LogoDefinition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogoDefinition) GetTextLogoDefinition() *TextLogoDefinition {
	if x != nil {
		return x.TextLogoDefinition
	}
	return nil
}

func (x *LogoDefinition) GetImageLogoDefinition() *ImageLogoDefinition {
	if x != nil {
		return x.ImageLogoDefinition
	}
	return nil
}

func (x *LogoDefinition) GetPosition() *LogoPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LogoDefinition) GetTimeLine() *TimeLine {
	if x != nil {
		return x.TimeLine
	}
	return nil
}

type TextLogoDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	FontType  string `protobuf:"bytes,2,opt,name=FontType,proto3" json:"FontType,omitempty"`
	FontSize  int32  `protobuf:"varint,3,opt,name=FontSize,proto3" json:"FontSize,omitempty"`
	FontColor string `protobuf:"bytes,4,opt,name=FontColor,proto3" json:"FontColor,omitempty"`
}

func (x *TextLogoDefinition) Reset() {
	*x = TextLogoDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextLogoDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextLogoDefinition) ProtoMessage() {}

func (x *TextLogoDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextLogoDefinition.ProtoReflect.Descriptor instead.
func (*TextLogoDefinition) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{24}
}

func (x *TextLogoDefinition) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TextLogoDefinition) GetFontType() string {
	if x != nil {
		return x.FontType
	}
	return ""
}

func (x *TextLogoDefinition) GetFontSize() int32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *TextLogoDefinition) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

type ImageLogoDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content      *InputPath `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	LoopTimes    int32      `protobuf:"varint,2,opt,name=LoopTimes,proto3" json:"LoopTimes,omitempty"`
	RepeatLast   bool       `protobuf:"varint,3,opt,name=RepeatLast,proto3" json:"RepeatLast,omitempty"`
	Transparency int32      `protobuf:"varint,4,opt,name=Transparency,proto3" json:"Transparency,omitempty"`
}

func (x *ImageLogoDefinition) Reset() {
	*x = ImageLogoDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageLogoDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageLogoDefinition) ProtoMessage() {}

func (x *ImageLogoDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageLogoDefinition.ProtoReflect.Descriptor instead.
func (*ImageLogoDefinition) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{25}
}

func (x *ImageLogoDefinition) GetContent() *InputPath {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ImageLogoDefinition) GetLoopTimes() int32 {
	if x != nil {
		return x.LoopTimes
	}
	return 0
}

func (x *ImageLogoDefinition) GetRepeatLast() bool {
	if x != nil {
		return x.RepeatLast
	}
	return false
}

func (x *ImageLogoDefinition) GetTransparency() int32 {
	if x != nil {
		return x.Transparency
	}
	return 0
}

type LogoPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosX   string `protobuf:"bytes,1,opt,name=PosX,proto3" json:"PosX,omitempty"`
	PosY   string `protobuf:"bytes,2,opt,name=PosY,proto3" json:"PosY,omitempty"`
	SizeX  string `protobuf:"bytes,4,opt,name=SizeX,proto3" json:"SizeX,omitempty"`
	SizeY  string `protobuf:"bytes,5,opt,name=SizeY,proto3" json:"SizeY,omitempty"`
	Locate string `protobuf:"bytes,6,opt,name=Locate,proto3" json:"Locate,omitempty"`
}

func (x *LogoPosition) Reset() {
	*x = LogoPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoPosition) ProtoMessage() {}

func (x *LogoPosition) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoPosition.ProtoReflect.Descriptor instead.
func (*LogoPosition) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{26}
}

func (x *LogoPosition) GetPosX() string {
	if x != nil {
		return x.PosX
	}
	return ""
}

func (x *LogoPosition) GetPosY() string {
	if x != nil {
		return x.PosY
	}
	return ""
}

func (x *LogoPosition) GetSizeX() string {
	if x != nil {
		return x.SizeX
	}
	return ""
}

func (x *LogoPosition) GetSizeY() string {
	if x != nil {
		return x.SizeY
	}
	return ""
}

func (x *LogoPosition) GetLocate() string {
	if x != nil {
		return x.Locate
	}
	return ""
}

type TimeLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int32 `protobuf:"varint,1,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime   int32 `protobuf:"varint,2,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
}

func (x *TimeLine) Reset() {
	*x = TimeLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imp_business_imp_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLine) ProtoMessage() {}

func (x *TimeLine) ProtoReflect() protoreflect.Message {
	mi := &file_imp_business_imp_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLine.ProtoReflect.Descriptor instead.
func (*TimeLine) Descriptor() ([]byte, []int) {
	return file_imp_business_imp_common_proto_rawDescGZIP(), []int{27}
}

func (x *TimeLine) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TimeLine) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

var File_imp_business_imp_common_proto protoreflect.FileDescriptor

var file_imp_business_imp_common_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x69, 0x6d, 0x70, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x69,
	0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22,
	0x79, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x05, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x38, 0x0a,
	0x04, 0x43, 0x6c, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x69,
	0x70, 0x52, 0x04, 0x43, 0x6c, 0x69, 0x70, 0x22, 0x3e, 0x0a, 0x04, 0x43, 0x6c, 0x69, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb5, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xc6, 0x04, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x41, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x77, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49,
	0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69, 0x12, 0x30, 0x0a,
	0x13, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x47, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x56, 0x0a, 0x0e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0e, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x9b, 0x02, 0x0a, 0x0e, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x58, 0x0a,
	0x0a, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49,
	0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x61, 0x0a, 0x0d, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x6d,
	0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x45, 0x72, 0x61, 0x73, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x35,
	0x0a, 0x03, 0x4f, 0x43, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x43, 0x52,
	0x52, 0x03, 0x4f, 0x43, 0x52, 0x22, 0x57, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x4a, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x63, 0x74, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x74, 0x22, 0x51,
	0x0a, 0x03, 0x4f, 0x43, 0x52, 0x12, 0x4a, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63,
	0x74, 0x22, 0x4c, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x58, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x58, 0x31, 0x12,
	0x0e, 0x0a, 0x02, 0x59, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x59, 0x31, 0x12,
	0x0e, 0x0a, 0x02, 0x58, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x58, 0x32, 0x12,
	0x0e, 0x0a, 0x02, 0x59, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x59, 0x32, 0x22,
	0x82, 0x01, 0x0a, 0x14, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xb5, 0x02, 0x0a, 0x1b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x45, 0x6d,
	0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x0b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x4b, 0x0a, 0x0b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x0b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x5c,
	0x0a, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x7b, 0x0a, 0x10,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x47, 0x0a, 0x09, 0x54, 0x54, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x54, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x09,
	0x54, 0x54, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x09, 0x54, 0x54, 0x53,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x73, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x73, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x59, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x41, 0x0a, 0x06, 0x42, 0x79, 0x74, 0x65, 0x48,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x48, 0x44, 0x4a,
	0x6f, 0x62, 0x52, 0x06, 0x42, 0x79, 0x74, 0x65, 0x48, 0x44, 0x22, 0x9e, 0x03, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4a, 0x6f, 0x62,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x3b, 0x0a, 0x05, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x52, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x6d, 0x75, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x75, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x12, 0x41, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x6f, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x6f, 0x73, 0x22, 0xac, 0x02, 0x0a, 0x09,
	0x42, 0x79, 0x74, 0x65, 0x48, 0x44, 0x4a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x3b, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x05, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x41, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x6f, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x6f, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x46, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x46, 0x70, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x43, 0x72,
	0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x43, 0x72, 0x66, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x69, 0x78, 0x46, 0x6d, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x69, 0x78,
	0x46, 0x6d, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x43, 0x72, 0x66, 0x22, 0xce, 0x01, 0x0a, 0x06,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x33,
	0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x75, 0x64,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x12, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x75, 0x64, 0x6e, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x72, 0x75, 0x65, 0x50, 0x65, 0x61, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x54, 0x72, 0x75, 0x65, 0x50, 0x65, 0x61,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x0a, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x75, 0x64, 0x6e, 0x65, 0x73, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x54, 0x72, 0x75, 0x65, 0x50, 0x65, 0x61, 0x6b, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a,
	0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x06,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x07,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xff, 0x02, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f,
	0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x67, 0x6f,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x13, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6f,
	0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46,
	0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x43, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49,
	0x6d, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x6f, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x7a, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x58, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x73, 0x58, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x6f, 0x73, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x73, 0x59, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x69, 0x7a, 0x65, 0x58, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x69, 0x7a, 0x65, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x69, 0x7a, 0x65, 0x59, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x69, 0x7a, 0x65, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0xcc, 0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x69, 0x6d, 0x70, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x0b, 0x49, 0x6d, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63,
	0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x69, 0x6d, 0x70, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x20,
	0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x49, 0x6d, 0x70,
	0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c,
	0x49, 0x6d, 0x70, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_imp_business_imp_common_proto_rawDescOnce sync.Once
	file_imp_business_imp_common_proto_rawDescData = file_imp_business_imp_common_proto_rawDesc
)

func file_imp_business_imp_common_proto_rawDescGZIP() []byte {
	file_imp_business_imp_common_proto_rawDescOnce.Do(func() {
		file_imp_business_imp_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_imp_business_imp_common_proto_rawDescData)
	})
	return file_imp_business_imp_common_proto_rawDescData
}

var file_imp_business_imp_common_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_imp_business_imp_common_proto_goTypes = []interface{}{
	(*InputPath)(nil),                   // 0: Volcengine.Imp.Models.Business.InputPath
	(*Input)(nil),                       // 1: Volcengine.Imp.Models.Business.Input
	(*Clip)(nil),                        // 2: Volcengine.Imp.Models.Business.Clip
	(*JobOutput)(nil),                   // 3: Volcengine.Imp.Models.Business.JobOutput
	(*JobExecution)(nil),                // 4: Volcengine.Imp.Models.Business.JobExecution
	(*Params)(nil),                      // 5: Volcengine.Imp.Models.Business.Params
	(*OverrideParams)(nil),              // 6: Volcengine.Imp.Models.Business.OverrideParams
	(*SmartEraseOverrideParams)(nil),    // 7: Volcengine.Imp.Models.Business.SmartEraseOverrideParams
	(*Watermark)(nil),                   // 8: Volcengine.Imp.Models.Business.Watermark
	(*OCR)(nil),                         // 9: Volcengine.Imp.Models.Business.OCR
	(*DetectRect)(nil),                  // 10: Volcengine.Imp.Models.Business.DetectRect
	(*OutputOverrideParams)(nil),        // 11: Volcengine.Imp.Models.Business.OutputOverrideParams
	(*SmartEmoticonOverrideParams)(nil), // 12: Volcengine.Imp.Models.Business.SmartEmoticonOverrideParams
	(*DrivenTextParams)(nil),            // 13: Volcengine.Imp.Models.Business.DrivenTextParams
	(*TTSParams)(nil),                   // 14: Volcengine.Imp.Models.Business.TTSParams
	(*OutputPath)(nil),                  // 15: Volcengine.Imp.Models.Business.OutputPath
	(*Job)(nil),                         // 16: Volcengine.Imp.Models.Business.Job
	(*TranscodeVideoJob)(nil),           // 17: Volcengine.Imp.Models.Business.TranscodeVideoJob
	(*ByteHDJob)(nil),                   // 18: Volcengine.Imp.Models.Business.ByteHDJob
	(*Video)(nil),                       // 19: Volcengine.Imp.Models.Business.Video
	(*Volume)(nil),                      // 20: Volcengine.Imp.Models.Business.Volume
	(*Audio)(nil),                       // 21: Volcengine.Imp.Models.Business.Audio
	(*Segment)(nil),                     // 22: Volcengine.Imp.Models.Business.Segment
	(*LogoDefinition)(nil),              // 23: Volcengine.Imp.Models.Business.LogoDefinition
	(*TextLogoDefinition)(nil),          // 24: Volcengine.Imp.Models.Business.TextLogoDefinition
	(*ImageLogoDefinition)(nil),         // 25: Volcengine.Imp.Models.Business.ImageLogoDefinition
	(*LogoPosition)(nil),                // 26: Volcengine.Imp.Models.Business.LogoPosition
	(*TimeLine)(nil),                    // 27: Volcengine.Imp.Models.Business.TimeLine
}
var file_imp_business_imp_common_proto_depIdxs = []int32{
	0,  // 0: Volcengine.Imp.Models.Business.Input.InputPath:type_name -> Volcengine.Imp.Models.Business.InputPath
	2,  // 1: Volcengine.Imp.Models.Business.Input.Clip:type_name -> Volcengine.Imp.Models.Business.Clip
	0,  // 2: Volcengine.Imp.Models.Business.JobExecution.InputPath:type_name -> Volcengine.Imp.Models.Business.InputPath
	3,  // 3: Volcengine.Imp.Models.Business.JobExecution.Output:type_name -> Volcengine.Imp.Models.Business.JobOutput
	16, // 4: Volcengine.Imp.Models.Business.JobExecution.Job:type_name -> Volcengine.Imp.Models.Business.Job
	1,  // 5: Volcengine.Imp.Models.Business.JobExecution.MultiInputs:type_name -> Volcengine.Imp.Models.Business.Input
	6,  // 6: Volcengine.Imp.Models.Business.Params.OverrideParams:type_name -> Volcengine.Imp.Models.Business.OverrideParams
	7,  // 7: Volcengine.Imp.Models.Business.OverrideParams.SmartErase:type_name -> Volcengine.Imp.Models.Business.SmartEraseOverrideParams
	11, // 8: Volcengine.Imp.Models.Business.OverrideParams.Output:type_name -> Volcengine.Imp.Models.Business.OutputOverrideParams
	12, // 9: Volcengine.Imp.Models.Business.OverrideParams.SmartEmoticon:type_name -> Volcengine.Imp.Models.Business.SmartEmoticonOverrideParams
	8,  // 10: Volcengine.Imp.Models.Business.SmartEraseOverrideParams.Watermark:type_name -> Volcengine.Imp.Models.Business.Watermark
	9,  // 11: Volcengine.Imp.Models.Business.SmartEraseOverrideParams.OCR:type_name -> Volcengine.Imp.Models.Business.OCR
	10, // 12: Volcengine.Imp.Models.Business.Watermark.DetectRect:type_name -> Volcengine.Imp.Models.Business.DetectRect
	10, // 13: Volcengine.Imp.Models.Business.OCR.DetectRect:type_name -> Volcengine.Imp.Models.Business.DetectRect
	15, // 14: Volcengine.Imp.Models.Business.OutputOverrideParams.OutputPath:type_name -> Volcengine.Imp.Models.Business.OutputPath
	0,  // 15: Volcengine.Imp.Models.Business.SmartEmoticonOverrideParams.DrivenVideo:type_name -> Volcengine.Imp.Models.Business.InputPath
	0,  // 16: Volcengine.Imp.Models.Business.SmartEmoticonOverrideParams.DrivenAudio:type_name -> Volcengine.Imp.Models.Business.InputPath
	13, // 17: Volcengine.Imp.Models.Business.SmartEmoticonOverrideParams.DrivenTextParams:type_name -> Volcengine.Imp.Models.Business.DrivenTextParams
	14, // 18: Volcengine.Imp.Models.Business.DrivenTextParams.TTSParams:type_name -> Volcengine.Imp.Models.Business.TTSParams
	17, // 19: Volcengine.Imp.Models.Business.Job.TranscodeVideo:type_name -> Volcengine.Imp.Models.Business.TranscodeVideoJob
	18, // 20: Volcengine.Imp.Models.Business.Job.ByteHD:type_name -> Volcengine.Imp.Models.Business.ByteHDJob
	19, // 21: Volcengine.Imp.Models.Business.TranscodeVideoJob.Video:type_name -> Volcengine.Imp.Models.Business.Video
	21, // 22: Volcengine.Imp.Models.Business.TranscodeVideoJob.Audio:type_name -> Volcengine.Imp.Models.Business.Audio
	22, // 23: Volcengine.Imp.Models.Business.TranscodeVideoJob.Segment:type_name -> Volcengine.Imp.Models.Business.Segment
	23, // 24: Volcengine.Imp.Models.Business.TranscodeVideoJob.Logos:type_name -> Volcengine.Imp.Models.Business.LogoDefinition
	19, // 25: Volcengine.Imp.Models.Business.ByteHDJob.Video:type_name -> Volcengine.Imp.Models.Business.Video
	21, // 26: Volcengine.Imp.Models.Business.ByteHDJob.Audio:type_name -> Volcengine.Imp.Models.Business.Audio
	22, // 27: Volcengine.Imp.Models.Business.ByteHDJob.Segment:type_name -> Volcengine.Imp.Models.Business.Segment
	23, // 28: Volcengine.Imp.Models.Business.ByteHDJob.Logos:type_name -> Volcengine.Imp.Models.Business.LogoDefinition
	20, // 29: Volcengine.Imp.Models.Business.Audio.Volume:type_name -> Volcengine.Imp.Models.Business.Volume
	24, // 30: Volcengine.Imp.Models.Business.LogoDefinition.TextLogoDefinition:type_name -> Volcengine.Imp.Models.Business.TextLogoDefinition
	25, // 31: Volcengine.Imp.Models.Business.LogoDefinition.ImageLogoDefinition:type_name -> Volcengine.Imp.Models.Business.ImageLogoDefinition
	26, // 32: Volcengine.Imp.Models.Business.LogoDefinition.Position:type_name -> Volcengine.Imp.Models.Business.LogoPosition
	27, // 33: Volcengine.Imp.Models.Business.LogoDefinition.TimeLine:type_name -> Volcengine.Imp.Models.Business.TimeLine
	0,  // 34: Volcengine.Imp.Models.Business.ImageLogoDefinition.Content:type_name -> Volcengine.Imp.Models.Business.InputPath
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_imp_business_imp_common_proto_init() }
func file_imp_business_imp_common_proto_init() {
	if File_imp_business_imp_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_imp_business_imp_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartEraseOverrideParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Watermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OCR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectRect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputOverrideParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartEmoticonOverrideParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrivenTextParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTSParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscodeVideoJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteHDJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextLogoDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageLogoDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imp_business_imp_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_imp_business_imp_common_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_imp_business_imp_common_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_imp_business_imp_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_imp_business_imp_common_proto_goTypes,
		DependencyIndexes: file_imp_business_imp_common_proto_depIdxs,
		MessageInfos:      file_imp_business_imp_common_proto_msgTypes,
	}.Build()
	File_imp_business_imp_common_proto = out.File
	file_imp_business_imp_common_proto_rawDesc = nil
	file_imp_business_imp_common_proto_goTypes = nil
	file_imp_business_imp_common_proto_depIdxs = nil
}
